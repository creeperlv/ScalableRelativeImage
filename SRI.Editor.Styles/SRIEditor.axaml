<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=netstandard">
	<Design.PreviewWith>
		<Border Padding="20">
			<!-- Add Controls for Previewer Here -->
			<Grid>
				<StackPanel>
					<Button Classes="Toolbar">
						ASD
					</Button>
					<ComboBox SelectedIndex="0">
						<ComboBoxItem>Item1 </ComboBoxItem>
						<ComboBoxItem>Item2</ComboBoxItem>
					</ComboBox>
					<ComboBox SelectedIndex="0" IsEnabled="False">
						<ComboBoxItem>Item1 </ComboBoxItem>
						<ComboBoxItem>Item2</ComboBoxItem>
					</ComboBox>
				</StackPanel>
			</Grid>
		</Border>
	</Design.PreviewWith>


	<Styles.Resources>
		<Thickness x:Key="MenuFlyoutPresenterThemePadding">1</Thickness>
		<SolidColorBrush x:Key="ToggleButtonBackground">#01000000</SolidColorBrush>
		<SolidColorBrush x:Key="ButtonBackground">#1AAA</SolidColorBrush>
		<SolidColorBrush x:Key="ButtonBackgroundPointerOver">#2AAA</SolidColorBrush>
	</Styles.Resources>
	<Style Selector="MenuItem">

		<Setter Property="Padding" Value="5,2" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<Border Name="PART_LayoutRoot"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="MenuItemIcon" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="MenuItemIGT" />
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="MenuItemChevron" />
							</Grid.ColumnDefinitions>
							<ContentPresenter Name="PART_IconPresenter"
											  Content="{TemplateBinding Icon}"
											  Margin="{DynamicResource MenuIconPresenterMargin}"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center" />

							<ContentPresenter Name="PART_HeaderPresenter"
											  Content="{TemplateBinding Header}"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Stretch"
											  Grid.Column="1">
								<ContentPresenter.DataTemplates>
									<DataTemplate DataType="sys:String">
										<AccessText Text="{Binding}" />
									</DataTemplate>
								</ContentPresenter.DataTemplates>
							</ContentPresenter>
							<TextBlock x:Name="PART_InputGestureText"
									   Grid.Column="2"
									   Classes="CaptionTextBlockStyle"
									   Margin="{DynamicResource MenuInputGestureTextMargin}"
									   Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
									   HorizontalAlignment="Right"
									   VerticalAlignment="Center" />
							<Path Name="PART_ChevronPath"
								  Stretch="Uniform"
								  Width="6"
								  Height="13"
								  Data="{StaticResource MenuItemChevronPathData}"
								  Margin="{DynamicResource MenuFlyoutItemChevronMargin}"
								  VerticalAlignment="Center"
								  Grid.Column="3" />
						</Grid>
					</Border>
					<Popup Name="PART_Popup"
						   WindowManagerAddShadowHint="False"
						   PlacementMode="Right"
						   HorizontalOffset="{DynamicResource MenuFlyoutSubItemPopupHorizontalOffset}"
						   IsLightDismissEnabled="False"
						   IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}">
						<Border Background="{DynamicResource MenuFlyoutPresenterBackground}"
								BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
								BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
								Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
								MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
								MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
								HorizontalAlignment="Stretch"
								CornerRadius="{DynamicResource OverlayCornerRadius}">
							<ScrollViewer Classes="menuscroller">
								<ItemsPresenter Name="PART_ItemsPresenter"
												Items="{TemplateBinding Items}"
												ItemsPanel="{TemplateBinding ItemsPanel}"
												ItemTemplate="{TemplateBinding ItemTemplate}"
												Margin="{DynamicResource MenuFlyoutScrollerMargin}"
												Grid.IsSharedSizeScope="True" />
							</ScrollViewer>
						</Border>
					</Popup>
				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="Menu > MenuItem">
		<Setter Property="Template">
			<ControlTemplate>
				<Border Name="PART_LayoutRoot"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
					<Panel>
						<ContentPresenter Name="PART_HeaderPresenter"
										  Content="{TemplateBinding Header}"
										  VerticalAlignment="Center"
										  HorizontalAlignment="Stretch"
										  Margin="{TemplateBinding Padding}">
							<ContentPresenter.DataTemplates>
								<DataTemplate DataType="sys:String">
									<AccessText Text="{Binding}" />
								</DataTemplate>
							</ContentPresenter.DataTemplates>
						</ContentPresenter>
						<Popup Name="PART_Popup"
							   WindowManagerAddShadowHint="False"
							   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
							   IsLightDismissEnabled="True"
							   IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
							   OverlayInputPassThroughElement="{Binding $parent[Menu]}">
							<Border Background="{DynamicResource MenuFlyoutPresenterBackground}"
									BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
									BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
									Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
									MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
									MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
									HorizontalAlignment="Stretch"
									CornerRadius="{DynamicResource OverlayCornerRadius}">
								<ScrollViewer Classes="menuscroller">
									<ItemsPresenter Name="PART_ItemsPresenter"
													Items="{TemplateBinding Items}"
													ItemsPanel="{TemplateBinding ItemsPanel}"
													ItemTemplate="{TemplateBinding ItemTemplate}"
													Margin="{DynamicResource MenuFlyoutScrollerMargin}"
													Grid.IsSharedSizeScope="True" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Panel>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="Button.DialogButton">
		<Setter Property="Padding" Value="20,8"/>
		<Setter Property="Margin" Value="2"/>
		<Setter Property="FontSize" Value="15"/>
	</Style>
	<Style Selector="Button">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="#15AAAAAA"/>
	</Style>
	<Style Selector="ComboBox">
		<Setter Property="Padding" Value="5,0" />
		<Setter Property="MaxDropDownHeight" Value="504" />
		<Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
		<Setter Property="Background" Value="#01000000" />
		<Setter Property="BorderBrush" Value="#0FFF" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="MinHeight" Value="10" />
		<Setter Property="PlaceholderForeground" Value="{DynamicResource ComboBoxPlaceHolderForeground}" />
	</Style>
	<Style Selector="ComboBox:pointerover /template/ Border#Background">
		<Setter Property="Background" Value="#3AAA" />
		<Setter Property="BorderBrush" Value="#3FFF" />
	</Style>
	<Style Selector="ComboBox:disabled /template/ Border#Background">
		<Setter Property="Background" Value="#5FFF" />
		<Setter Property="BorderBrush" Value="Transparent" />
	</Style>

	<Style Selector="Button.Toolbar">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.TabPageButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Padding" Value="2,2"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>
	<Style Selector="Button:pointover">
		<Setter Property="BorderBrush" Value="#2AAA"/>
	</Style>
	<Style Selector="TextBox">
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Padding" Value="5,2" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}"/>
		<Setter Property="BorderThickness" Value="0,0,0,1" />
	</Style>
	<Style Selector="ToggleButton">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border  x:Name="PART_ROOT"
						 Background="{TemplateBinding Background}">
					<Grid>
						<ContentPresenter x:Name="PART_ContentPresenter"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  Padding="{TemplateBinding Padding}"
										  RecognizesAccessKey="True"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0,0,0"/>
						<Grid Name="hinter" Classes="hinter" x:Name="hinter"
							  Width="2"
							  VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
					</Grid>

				</Border>

			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="ToggleButton /template/ Border#PART_ROOT">
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
	</Style>
	<Style Selector="ToggleButton /template/ Grid#hinter">
		<Setter Property="Margin" Value="2,7" />
	</Style>
	<Style Selector="ToggleButton /template/ Grid#hinter">
		<Setter Property="Background" Value="#AAA" />
	</Style>

	<Style Selector="ToggleButton:pointerover /template/ Border#PART_ROOT">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
	</Style>

	<Style Selector="ToggleButton:pressed /template/ Border#PART_ROOT">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
	</Style>

	<Style Selector="ToggleButton:checked:pointerover /template/ Border#PART_ROOT">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
	</Style>
	<Style Selector="ToggleButton:pointerover /template/ Grid#hinter">
		<Setter Property="Margin" Value="2,5" />
	</Style>

	<Style Selector="ToggleButton:checked:pressed /template/ Border#PART_ROOT">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
	</Style>

	<Style Selector="ToggleButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
	</Style>

	<Style Selector="ToggleButton:pressed  /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
	</Style>

	<Style Selector="ToggleButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushDisabled}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundDisabled}" />
	</Style>

	<Style Selector="ToggleButton:checked /template/ Grid#hinter">
		<Setter Property="Background" Value="#2288EE" />
	</Style>
	<Style Selector="ToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
	</Style>

	<Style Selector="ToggleButton:checked:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPointerOver}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPointerOver}" />
	</Style>

	<Style Selector="ToggleButton:checked:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPressed}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPressed}" />
	</Style>

	<Style Selector="ToggleButton:checked:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedDisabled}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedDisabled}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedDisabled}" />
	</Style>

	<Style Selector="ToggleButton:indeterminate /template/ Grid#hinter">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminate}" />
	</Style>
	<Style Selector="ToggleButton:indeterminate /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminate}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminate}" />
	</Style>

	<Style Selector="ToggleButton:indeterminate:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminatePointerOver}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminatePointerOver}" />
	</Style>

	<Style Selector="ToggleButton:indeterminate:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundIndeterminatePressed}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminatePressed}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminatePressed}" />
	</Style>

	<Style Selector="ToggleButton:indeterminate:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushIndeterminateDisabled}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ToggleButtonForegroundIndeterminateDisabled}" />
	</Style>
</Styles>
